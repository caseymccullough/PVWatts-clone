{"version":3,"sources":["Components/Home/PV-arrays.jpeg","Components/Home/Home.js","Components/Resource/Resource.js","Components/System/System.js","Components/TableHeader/TableHeader.js","Components/TableBody/TableBody.js","Components/Results/Results.js","Components/SubmitData/SubmitData.js","Components/NavBar/nrel-logo.png","Components/NavBar/NavBar.js","Components/Footer/Footer.js","App.js","index.js"],"names":["Home","className","id","src","PVImg","alt","Resource","props","handleChange","event","setFormData","formData","target","name","value","console","log","Form","onSubmit","preventDefault","type","latitude","onChange","longitude","price","System","panelOptions","arrayOptions","handleSelectPanel","eventKey","moduleTypeIndex","handleSelectArray","arrayTypeIndex","size","DropdownButton","title","Dropdown","Item","onSelect","systemLosses","tilt","azimuth","TableHeader","tableHeaders","map","text","i","TableBody","tableRows","month","solarData","outputs","solrad_monthly","toFixed","ac_monthly","elecRate","solrad_annual","ac_annual","Results","ac_annualsolarData","Object","keys","length","Table","striped","bordered","hover","SubmitData","input","keyValArray","entries","forEach","key","push","dataElements","str","undefined","getSolarData","a","updatedUrl","fetch","res","json","data","setSolarData","Button","onClick","NavBar","href","nrelLogo","Footer","links","App","useState","index","setIndex","setValidData","color","light","expand","Carousel","activeIndex","selectedIndex","e","wrap","data-interval","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d12860d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/PV-arrays.e829976b.jpeg\";","import PVImg from './PV-arrays.jpeg';\nimport '../../App.css';\n\nexport default function Home() {\n  return (\n      <div className=\"home slide\">\n        <h1>Solar Calculator Home Page</h1>\n        <h2>By Casey McCullough</h2>\n        <img id = \"home-img\" src = {PVImg} alt=\"an array of photovoltaics\"/>\n    </div>\n  );\n}\n","\nimport { Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { useState } from \"react\";\nimport '../../App.css';\nimport { setGlobalCssModule } from 'reactstrap/es/utils';\nimport { useEffect } from 'react';\n\n\nexport default function Resource(props) {\n  \n      /* name is name of thing to which it's bound  \n        set formData to the spread of formData, find by name, assign value\n         ...formData returns series of comma-separated values\n         we add to that the name of one data item : the new value for that item\n          this will overwrite the last one (!).  See #1 above. \n      */\n      const handleChange = (event)=> {\n        props.setFormData({ ...props.formData, [event.target.name]: event.target.value});\n        console.log(event.target.name + \": \" + event.target.value);\n      }\n    \n      const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log (props.formData);\n       // props.setLatitude(formData.latitude);\n       // props.setLongitude(formData.longitude);\n    \n      }\n  \n  \n    return (\n      <div className=\"resource slide\">\n        <h1>Solar Resource Data</h1>\n        <p>Please enter your latitude, longitude, and electricity price below</p>\n\n        <Form onSubmit={handleSubmit} className=\"lat-and-long-form form slide\">\n          <label>\n            Latitude\n            <input \n              type = \"text\" \n              name=\"latitude\" \n              value={props.formData.latitude} \n              onChange={handleChange}\n              ></input>\n          </label>\n          <br></br>\n          <label>\n            Longitude\n            <input type=\"text\" \n            name=\"longitude\"\n            value={props.formData.longitude}\n            onChange={handleChange}\n            ></input>\n          </label>\n          <br></br>\n          <label>\n            Electricity Price\n            <input type=\"text\" \n            name=\"price\"\n            value={props.formData.price}\n            onChange={handleChange}\n            ></input>\n          </label>\n        </Form>\n    </div>\n  );\n}\n","/* from https://ncoughlin.com/posts/react-dropdown/#using-state-to-manage-dropdown-selection\n*/\n\nimport { Link } from \"react-router-dom\";\nimport { Form } from 'react-bootstrap';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport Button from 'react-bootstrap/Button';\nimport { useState } from \"react\";\n\nexport default function System(props) {\n\n  const panelOptions = [\"Standard\", \"Premium\", \"Thin film\"];\n  const arrayOptions = [\"Fixed - Open Rack\", \"Fixed - Roof Mounted\", \"1-Axis\", \"1-Axis Backtracking\", \"2-Axis\"];\n    \n    const handleChange = (event)=> {\n        props.setFormData({ ...props.formData, [event.target.name]: event.target.value});\n        console.log(event.target.name + \": \" + event.target.value);\n      }\n\n    const handleSelectPanel = (eventKey, event) => {\n    props.setFormData({...props.formData, moduleTypeIndex: eventKey})\n    }\n\n    const handleSelectArray = (eventKey, event) => {\n      props.setFormData({...props.formData, arrayTypeIndex: eventKey})\n      }\n    \n\n      const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log (props.formData);\n    \n      }\n    \n      \n    return (\n        <div className=\"system slide\">\n          <h1>System Information</h1>\n        \n          <p>Modify the inputs below to run the simulation</p>\n  \n          <Form onSubmit={handleSubmit} className=\"system-info-form\">\n            <label>\n              DC System Size\n              <input \n                type = \"text\" \n                name=\"size\" \n                value={props.formData.size} \n                onChange={handleChange}\n                ></input>\n            </label>\n\n            <div id= \"dropdown-holder\">\n\n               <DropdownButton id=\"dropdown-basic-button\" title=\"Panel type\">\n \n                    <Dropdown.Item onSelect = {handleSelectPanel} eventKey=\"0\">{panelOptions[0]}</Dropdown.Item>\n                    <Dropdown.Item onSelect = {handleSelectPanel} eventKey=\"1\">{panelOptions[1]}</Dropdown.Item>\n                    <Dropdown.Item onSelect = {handleSelectPanel} eventKey=\"2\">{panelOptions[2]}</Dropdown.Item>\n  \n                </DropdownButton>\n              \n              <DropdownButton\n                title=\"Array type\"\n                id=\"dropdown-basic-button\"\n                className=\"dropdown\"  \n                >\n                    <Dropdown.Item onSelect = {handleSelectArray} eventKey=\"0\">{arrayOptions[0]}</Dropdown.Item>\n                    <Dropdown.Item onSelect = {handleSelectArray} eventKey=\"1\">{arrayOptions[1]}</Dropdown.Item>\n                    <Dropdown.Item onSelect = {handleSelectArray} eventKey=\"2\">{arrayOptions[2]}</Dropdown.Item>\n                    <Dropdown.Item onSelect = {handleSelectArray} eventKey=\"3\">{arrayOptions[3]}</Dropdown.Item>\n                    <Dropdown.Item onSelect = {handleSelectArray} eventKey=\"4\">{arrayOptions[4]}</Dropdown.Item>\n              </DropdownButton>\n            </div>\n\n            <label>\n              System Losses\n              <input type=\"text\" \n              name=\"systemLosses\"\n              value={props.formData.systemLosses}\n              onChange={handleChange} \n              ></input>\n            </label>\n            <br></br>\n\n            <label>\n              Tilt (degrees)\n              <input type=\"text\" \n              name=\"tilt\"\n              value={props.formData.tilt}\n              onChange={handleChange}\n              ></input>\n            </label>\n            <br></br>\n\n            <label>\n              Azimuth (degrees)\n              <input type=\"text\" \n              name=\"azimuth\"\n              value={props.formData.azimuth}\n              onChange={handleChange}\n              ></input>\n            </label>\n            \n          </Form>\n      </div>\n    );\n  }","import '../../App.css';\nimport Table from 'react-bootstrap/Table';\n\n\nexport default function TableHeader () {\n\n    const tableHeadText = [\"Month\", \"Solar Radiation\", \"AC Energy (kWh)\", \"Value\"];\n    const tableSubheadings = [\"\", \"kw/ m^2 / day\", \"kWh\", \"$\"];\n\n    const tableHeaders = tableHeadText.map((text, i) => {\n    return (<th key={i}> { text } </th> )\n});\n\n\n    return (\n    <thead>\n        <tr>\n        {tableHeaders}\n        </tr>\n      </thead>\n\n\n    );\n}","import '../../App.css';\nimport Table from 'react-bootstrap/Table';\n\nexport default function TableBody (props) {\n\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    const tableRows = months.map((month, i) => {\n    return (\n    \n        <tr key={i}> \n            <td>{ month } </td>\n            <td>{props.solarData.outputs.solrad_monthly[i].toFixed(2)}</td>\n            <td>{props.solarData.outputs.ac_monthly[i].toFixed(0)}</td>\n            <td>${(props.solarData.outputs.ac_monthly[i]\n            * props.elecRate).toFixed(2)} </td>\n              \n\n        </tr> \n        )\n    });\n\n    return (\n        <tbody>\n            {tableRows}\n            {/* last \"special\" row is below */}\n            <tr id = \"lastRow\"> \n                <td> Annual </td>\n                <td>{props.solarData.outputs.solrad_annual.toFixed(2)}</td>\n                <td>{props.solarData.outputs.ac_annual.toFixed(0)}</td>\n                <td>${(props.solarData.outputs.ac_annual * props.elecRate).toFixed(2)}</td>\n            </tr> \n      </tbody>\n    );\n}","import {useState, useEffect} from \"react\";\nimport '../../App.css';\nimport Table from 'react-bootstrap/Table';\nimport TableHeader from '../TableHeader/TableHeader';\nimport TableBody from '../TableBody/TableBody';\n\nexport default function Results(props) {\n\n  console.log (props.ac_annualsolarData);\n\n  return (\n      <div className=\"results slide\">\n        <div id=\"results-header\">\n          <h1>Results</h1>\n          {/*does object have keys, (larger than 0) */}\n          <div id=\"annual-output\">\n           {Object.keys(props.solarData).length > 0 ?  \n             <span id=\"annual-output-num\">{(props.solarData.outputs.ac_annual).toFixed(0)} &nbsp;</span>\n             : <p>unknown</p>} \n            \n             <span id=\"kwh-year\">kWh/ Year</span>\n          </div> \n        </div>\n        \n        <Table striped bordered hover>\n          <TableHeader></TableHeader>\n              {Object.keys(props.solarData).length > 0 ?  \n            <TableBody solarData = {props.solarData} elecRate = {props.formData.price}></TableBody>\n              : <tbody></tbody>} \n        </Table>\n\n    </div>\n  );\n}\n","import '../../App.css';\nimport Button from 'react-bootstrap/Button';\nimport {useState, useEffect} from \"react\";\n\nexport default function SubmitData (props) {\n\n  const panelOptions = [\"Standard\", \"Premium\", \"Thin film\"];\n  const arrayOptions = [\"Fixed - Open Rack\", \"Fixed - Roof Mounted\", \"1-Axis\", \"1-Axis Backtracking\", \"2-Axis\"];\n    \n  const testUrl =`https://developer.nrel.gov/api/pvwatts/v6.json?api_key=DEMO_KEY&lat=40&lon=-115&system_capacity=4&azimuth=180&tilt=40&array_type=1&module_type=1&losses=10`;\n    \n  let keyValArray = [];\n    const keyValue = (input) => Object.entries(input).forEach(([key,value]) => {\n        keyValArray.push(key + \": \" + value);\n      })\n      \n      keyValue(props.formData);\n      const dataElements = keyValArray.map((str, i) => {\n          return (\n             (str !== undefined) ? <p key= {i}>{str}</p>: <p></p>\n          )\n      });\n\n\n    const getSolarData = async () => {\n      try {\n        let updatedUrl = `https://developer.nrel.gov/api/pvwatts/v6.json?api_key=DEMO_KEY&lat=`\n        + props.formData.latitude + `&lon=` + props.formData.longitude \n        + `&system_capacity=`+ props.formData.size \n        + `&azimuth=` + props.formData.azimuth \n        + `&tilt=` + props.formData.tilt \n        + `&array_type=` + props.formData.arrayTypeIndex \n        + `&module_type=` + props.formData.moduleTypeIndex \n        + `&losses=` + props.formData.systemLosses;\n\n        const res = await fetch(updatedUrl);\n        const data = await res.json();\n        props.setSolarData(data);\n       // console.log(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n  \n\n\n\n\n    return (\n   <div id=\"submit-data\" className=\"slide\">\n    <h1> Data Summary</h1>\n            <div id = \"data-values\">{dataElements}</div>\n     <Button onClick={getSolarData}>Submit Data</Button>\n   </div>\n    );\n\n    \n}","export default __webpack_public_path__ + \"static/media/nrel-logo.b4926a7b.png\";","\nimport '../../App.css';\nimport nrelLogo from './nrel-logo.png';\nimport pvWattsImg from './header_app_pvwatts.gif'\n\n    export default function NavBar() {\n        \n        return (\n        <nav>\n            <div className=\"nav-container\">\n                <div  className=\"nav-item\">\n                    <a id=\"pvwatts-header-text\" className=\"font-weight-bold\" href=\"https://pvwatts.nrel.gov/\">\n                      PVWatts Calculator</a> \n                </div>\n                <div className=\"nav-item\">\n                    <a href=\"https://www.nrel.gov/\">\n                        <img src = {nrelLogo} alt=\"NREL logo\"/></a>\n                </div>\n            </div>\n            <div className=\"blue-bar\"></div>\n        </nav>\n        );\n\n    }","import '../../App.css';\n\nexport default function Footer() {\n  \n  const linkNames = [\"Need Help?\", \"Security & Privacy\", \"Disclaimer\", \"NREL Home\"];\n  \n  const links = linkNames.map((name, i)=> {\n      return (<a href =\"https://www.nrel.gov/\" key = {i}>{name} {\"  |\"}</a>);\n  });\n    \n  \n  return (\n    <div className=\"footer\">\n        <div id = \"nrel-description\">\n            <p>NREL is a national laboratory of the U.S. Department of Energy, Office of Energy Efficiency and Renewable Energy, operated by the Alliance for Sustainable Energy, LLC.</p>\n        </div>\n        <div id=\"footer-links\">\n            {links}\n        </div>\n    </div>\n  );\n}","import { Link, Route, Switch } from \"react-router-dom\";\nimport {useState, useEffect} from \"react\";\nimport Carousel from 'react-bootstrap/Carousel';\nimport Home from \"./Components/Home/Home\";\nimport Resource from \"./Components/Resource/Resource\";\nimport System from \"./Components/System/System\";\nimport Results from \"./Components/Results/Results\";\nimport SubmitData from \"./Components/SubmitData/SubmitData\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport Footer from \"./Components/Footer/Footer\";\nimport './App.css';\n\nexport default function App() {\n\n  const [formData, setFormData] = useState({\n    latitude: \"41.5\",\n    longitude: \"-81.5\",\n    size: \"4\",\n    moduleTypeIndex: \"0\",\n    arrayTypeIndex: \"0\",\n    systemLosses: \"14.08\",\n    tilt: \"20\",\n    azimuth: \"180\",\n    price: \".12\",\n});\n\nconst [solarData, setSolarData] = useState({});\n\nconst [index, setIndex] = useState(0);\n  \n  const handleSelect = (selectedIndex, e) => {\n      setIndex(selectedIndex);\n    };\n\n  const [isDataValid, setValidData] = useState(0);\n  \n  return (\n    <div className=\"App\">\n      <div id=\"body\">\n        <div id = \"holding-square\">\n          <NavBar color=\"faded\" light expand=\"md\"></NavBar>\n          <main>\n              <Carousel activeIndex={index} onSelect={handleSelect} wrap= {false} data-interval={null} >\n                <Carousel.Item>\n                  <Home></Home>\n                </Carousel.Item>\n                <Carousel.Item>\n                  <Resource formData = {formData} setFormData = {setFormData}></Resource>\n                </Carousel.Item>\n                <Carousel.Item>\n                  <System formData = {formData} setFormData = {setFormData}> </System>\n                </Carousel.Item>\n                <Carousel.Item>  \n                  <SubmitData formData = {formData} setValidData = {setValidData} setSolarData={setSolarData}> </SubmitData>   \n                </Carousel.Item>\n                 <Carousel.Item>  \n                   <Results formData={formData} solarData={solarData} ></Results>  \n                </Carousel.Item>\n\n              </Carousel>   \n            </main>\n            <Footer></Footer> \n          </div>\n      </div> \n    </div>\n  );\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\n\nReactDOM.render(\n \n    \n    <App />\n,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}